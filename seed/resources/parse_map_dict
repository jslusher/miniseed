# -*- coding: utf-8 -*-
from __future__ import unicode_literals
import sys
import os
import argparse
import re



def parse_instance_name(hostname=None, profile='ec2_east_micro'):
    if 'ec2' in hostname:
        with open('map_file', 'a') as pfile:
            pfile.write("%(p)s:\n" % {'p': prof_dict[hostname]})
    else:
        hostname_split = hostname.split('-') or hostname.split('_')
        for grain in hostname_split:
            if len(grain) > 3:
                grain = grain.strip(grain[3:])
            if grain in grn_inf_dict:
                inf = grain
            elif grain in grn_env_dict:
                env = grain
            elif grain in grn_srvgrp_dict:
                grp = grain
            elif grain in grn_srvtype_dict:
                typ = grain
            elif grain in grn_srvrole_dict:
                rle = grain
            else:
                print "\n!!! '%s' is not a grain. Check the spreadsheet and \
                        verify you typed it correctly. !!!\n" % grain
                exit(1)
        try:
            with open('map_file', 'a') as gfile:
                gfile.write("  - %(h)s: \n"
                            "      grains: \n"
                            "        infrastructure: %(i)s \n"
                            "        environment: %(e)s \n"
                            "        servergroup: %(g)s \n"
                            "        servertype: %(t)s \n"
                            "        serverrole: %(r)s \n" % {
                                    'p': profile,
                                    'h': hostname,
                                    'i': grn_inf_dict[inf],
                                    'e': grn_env_dict[env], 
                                    'g': grn_srvgrp_dict[grp], 
                                    't': grn_srvtype_dict[typ],
                                    'r': grn_srvrole_dict[rle]
                                    })
            print "grains written to map file map_file"
        except UnboundLocalError as e:
            print ">could not write grains to file: || %s" % e
            print ">you must have one grain from each of the 5 categories."
            exit(1)

if __name__ == '__main__':
    clean_file = open('map_file', 'w')
    clean_file.write('')
    clean_file.close()
    
    if hostname_file:
        hostname_file = open(hostname_file, 'r')
        for i in hostname_file:
            parse_instance_name(hostname=i[:-1])
    else:
        arg_list = sysargv[1:]
        for i in arg_list:
            parse_instance_name(hostname=i)
    exit(0)
